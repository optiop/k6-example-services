services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana:/etc/grafana/provisioning/
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - monitoring

  k6:
    image: grafana/k6:latest
    container_name: k6
    depends_on:
      - prometheus
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    command: >
      run -o experimental-prometheus-rw /scripts/script.js
    volumes:
      - ./k6:/scripts
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - monitoring

  golang-service:
    build:
      context: ./golang-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
    networks:
      - monitoring

  rust-service:
    build:
      context: ./rust-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
    networks:
      - monitoring

volumes:
  grafana-data:

networks:
  monitoring:
